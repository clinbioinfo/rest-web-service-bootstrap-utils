package [% namespace %]::App;

use Dancer2;
use Carp;
use File::Basename;
use FindBin;

use lib "$FindBin::Bin/../lib";

use [% namespace %]::Logger;
use [% namespace %]::Manager;

use constant TRUE => 1;
use constant FALSE => 0;

use constant DEFAULT_LOG_LEVEL => 4;

use constant DEFAULT_LOG_FILE =>  "$FindBin::Bin/../output/" . File::Basename::basename($0) . '.log';

use constant DEFAULT_CONFIG_FILE => "$FindBin::Bin/../conf/[% app_config_ini_file %]";

use constant DEFAULT_ENVIRONMENT => '[% default_database %]';

set serializer => 'JSON';

#set session => "Simple";

our $VERSION = '0.1';

my $logger = new [% namespace %]::Logger(
    logfile   => DEFAULT_LOG_FILE, 
    log_level => DEFAULT_LOG_LEVEL);

if (!defined($logger)){
    confess "Could not instantiate [% namespace %]::Logger";
}

my $manager = [% namespace %]::Manager::getInstance(
    config_file => DEFAULT_CONFIG_FILE,
    environment => DEFAULT_ENVIRONMENT,
    logfile     => DEFAULT_LOG_FILE,
    log_level   => DEFAULT_LOG_LEVEL
    );

if (!defined($manager)){
    confess("Could not instantiate [% namespace %]::Manager");
}

## Will insert autogenerated methods here
[% app_methods %]

dance();
 
true;

__END__


=head1 NAME

 [% namespace %]::App

=head1 VERSION

 1.0

=head1 SYNOPSIS

 use [% namespace %]::App;

=head1 AUTHOR

 [% author %]

 [% copyright %]

=head1 METHODS

=over 4

=cut